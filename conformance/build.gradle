import org.jetbrains.kotlin.gradle.plugin.*

plugins {
    id "org.jetbrains.kotlin.plugin.serialization"
}

apply plugin: "kotlinx-serialization"
apply plugin: "org.jetbrains.kotlin.multiplatform"
apply plugin: "application"

kotlin {
    jvm()
    js {
        browser {
            useCommonJs()
        }
        nodejs {}
    }

    // For ARM, should be changed to iosArm32 or iosArm64
    // For Linux, should be changed to e.g. linuxX64
    // For MacOS, should be changed to e.g. macosX64
    // For Windows, should be changed to e.g. mingwX64
    // macosX64("macos")

    sourceSets {
        commonMain {
            dependencies {
                implementation kotlin("stdlib-common")
                implementation project(":runtime")
                implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime-common:$kotlin_serialization_version"
            }
        }
        commonTest {
            dependencies {
                implementation kotlin("test-common")
                implementation kotlin("test-annotations-common")
            }
        }

        jvmMain {
            dependencies {
                implementation kotlin("stdlib")
                implementation project(":runtime")
                implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:$kotlin_serialization_version"
                implementation "com.google.protobuf:protobuf-java:$protobuf_version"
            }

            sourceCompatibility = "1.6"
            tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
                kotlinOptions {
                    jvmTarget = "1.6"
                }
            }

            mainClassName = "pbandk.conformance.MainKt"

            test {
                testLogging {
                    outputs.upToDateWhen {false}
                    showStandardStreams = true
                    exceptionFormat = 'full'
                    events 'passed', 'skipped', 'failed'
                }
            }
        }
        jvmTest {
            dependencies {
                implementation kotlin("test")
                implementation kotlin("test-junit")
                implementation "junit:junit:4.12"
            }
        }

        jsMain {
            dependencies {
                implementation project(":runtime")
                implementation kotlin("stdlib-js")
                implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime-js:$kotlin_serialization_version"
            }
        }
        jsTest {
            dependencies {
                implementation kotlin("test-js")
            }
        }

        /*
        macosMain {
        }
        macosTest {
        }
        */
    }
}